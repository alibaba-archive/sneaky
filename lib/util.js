// Generated by CoffeeScript 1.6.3
(function() {
  var Util, fs, ini, _;

  fs = require('fs');

  ini = require('ini');

  _ = require('underscore');

  Util = (function() {
    var projectPrefix;

    function Util() {}

    projectPrefix = 'project:';

    Util.expandPath = function(srcPath) {
      var matches;
      if (matches = srcPath.match(/^~(.*)/)) {
        return "" + process.env.HOME + matches[1];
      } else {
        return srcPath;
      }
    };

    Util.expandToArray = function(str) {
      if (typeof str === 'string' && str.length > 0) {
        return str.split(',').map(function(r) {
          return r.trim();
        });
      }
      return [];
    };

    Util.loadConfig = function(file, expand, callback) {
      var configFile,
        _this = this;
      if (expand == null) {
        expand = true;
      }
      if (callback == null) {
        callback = function() {};
      }
      if (typeof arguments[1] === 'function') {
        callback = arguments[1];
        expand = true;
      }
      configFile = Util.expandPath(file || '~/.sneakyrc');
      return fs.readFile(configFile, function(err, content) {
        var configs, k, kk, v, vv, _configs, _project;
        if (err != null) {
          return callback(err, content);
        }
        configs = ini.parse(content.toString());
        _configs = {};
        for (k in configs) {
          v = configs[k];
          if (k.indexOf(projectPrefix) === 0) {
            if (_configs.projects == null) {
              _configs.projects = {};
            }
            _project = v;
            for (kk in _project) {
              vv = _project[kk];
              switch (kk) {
                case 'excludes':
                case 'servers':
                  _project[kk] = expand ? Util.expandToArray(vv) : vv;
              }
            }
            _project.name = k.slice(projectPrefix.length).trim();
            _configs['projects'][_project.name] = _project;
            continue;
          }
          switch (k) {
            case 'excludes':
            case 'servers':
              _configs[k] = expand ? Util.expandToArray(v) : v;
              break;
            default:
              _configs[k] = v;
          }
        }
        return callback(err, _configs);
      });
    };

    Util.saveConfig = function(file, configs, callback) {
      var configFile, k, kk, project, v, _configs, _filterProp;
      if (callback == null) {
        callback = function() {};
      }
      configFile = Util.expandPath(file || '~/.sneakyrc');
      _configs = {};
      _filterProp = function(prop, val) {
        switch (prop) {
          case 'excludes':
          case 'servers':
            return val.join(',');
          default:
            return val;
        }
      };
      for (k in configs) {
        v = configs[k];
        if (k === 'projects') {
          if (v.template != null) {
            _configs["" + projectPrefix + " template"] = v.template;
            delete v.template;
          }
          for (kk in v) {
            project = v[kk];
            _configs["" + projectPrefix + " " + project.name] = project;
          }
        } else {
          _configs[k] = v;
        }
      }
      return fs.writeFile(configFile, ini.stringify(_configs), callback);
    };

    return Util;

  })();

  module.exports = Util;

}).call(this);
