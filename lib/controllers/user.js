// Generated by CoffeeScript 1.6.3
(function() {
  var BaseController, UserController, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseController = require('./base');

  UserController = (function(_super) {
    __extends(UserController, _super);

    function UserController() {
      _ref = UserController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserController.prototype.index = function(params, callback) {
      console.log('index');
      console.log(arguments);
      return callback(null, params);
    };

    UserController.prototype.index.toHash = function() {
      var key;
      key = 'user:controller:index';
      return BaseController._toHash.call(this, key, arguments);
    };

    UserController.prototype.message = function(params, callback) {
      console.log('message');
      console.log(arguments);
      return callback(null, params);
    };

    return UserController;

  })(BaseController);

  module.exports = UserController;

}).call(this);
