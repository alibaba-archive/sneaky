// Generated by CoffeeScript 1.6.3
(function() {
  var Router;

  Router = (function() {
    function Router() {}

    Router.aliasRoute = function(req, res, target) {
      var ctrl, format, i, method, params, v, _ref;
      if (target == null) {
        target = {};
      }
      ctrl = target.ctrl, method = target.method, format = target.format;
      format = (format != null) || ((_ref = req.url.match(/\.([0-9a-z]+)$/i)) != null ? _ref[1] : void 0) || null;
      params = req.REQUEST || {};
      params._data = typeof req.params === 'object' ? (function() {
        var _ref1, _results;
        _ref1 = req.params;
        _results = [];
        for (i in _ref1) {
          v = _ref1[i];
          _results.push(v);
        }
        return _results;
      })() : [];
      return Router.subRoute({
        ctrl: ctrl,
        method: method,
        params: params,
        format: format
      }, function(err, result) {
        if (err != null) {
          return res.send(404);
        }
        return res.json(result);
      });
    };

    Router.autoRoute = function(req, res) {
      var ctrl, format, i, method, params, v, _ref, _ref1, _ref2;
      format = ((_ref = req.url.match(/\.([0-9a-z]+)$/i)) != null ? _ref[1] : void 0) || null;
      if (format != null) {
        _ref1 = req.params;
        for (i in _ref1) {
          v = _ref1[i];
          req.params[i] = v != null ? v.replace("." + format, '') : void 0;
        }
      }
      _ref2 = req.params, ctrl = _ref2.ctrl, method = _ref2.method;
      params = req.REQUEST || {};
      params._data = (req.params[1] != null) && req.params[1].length > 0 ? req.params[1].split('/') : [];
      return Router.subRoute({
        ctrl: ctrl,
        method: method,
        params: params,
        format: format
      }, function(err, result) {
        if (err != null) {
          return res.send(404);
        }
        return res.json(result);
      });
    };

    Router.subRoute = function(data, callback) {
      var $ctrl, ctrl, e, format, method, params, toFormat, _ref;
      if (callback == null) {
        callback = function() {};
      }
      ctrl = data.ctrl, method = data.method, params = data.params, format = data.format;
      try {
        $ctrl = require('./controllers')["" + ctrl + "Controller"];
        if ($ctrl == null) {
          return callback(404);
        }
        if (format != null) {
          toFormat = "to" + (format[0].toUpperCase()) + format.slice(1);
        }
        if (!(typeof $ctrl[method] === 'function' || params._data.length > 0)) {
          if (method != null) {
            params._data = [method].concat(params._data || []);
          }
          method = 'index';
        }
        if (params._id == null) {
          if ((_ref = params._data) != null) {
            _ref.every(function(val) {
              if (val != null ? val.match(/^[a-z0-9]{24}$/i) : void 0) {
                params._id = val;
                return false;
              }
              return true;
            });
          }
        }
        if (format != null) {
          return $ctrl[method][toFormat].call($ctrl[method], params, callback);
        }
        return $ctrl[method].call($ctrl, params, callback);
      } catch (_error) {
        e = _error;
        console.error(e.toString());
        return callback(404);
      }
    };

    Router.route = function(app) {
      return app.get('/:ctrl/:method?*', Router.autoRoute);
    };

    return Router;

  })();

  module.exports = Router;

}).call(this);
